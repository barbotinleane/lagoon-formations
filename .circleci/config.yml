version: 2

jobs:
  build:
    docker:
      - image: circleci/php:7.4-node-browsers
        environment:
          MYSQL_HOST: lagoonkform.mysql.db
          MYSQL_DB: lagoonkform
          MYSQL_USER: lagoonkform
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_PASSWORD: lVDrP22Mb906GYZgsKlU
          MYSQL_ROOT_PASSWORD: lVDrP22Mb906GYZgsKlU
          MYSQL_RANDOM_ROOT_PASSWORD: lVDrP22Mb906GYZgsKlU
      - image: mysql:5.7
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --innodb-large-prefix=true --innodb-file-format=Barracuda
        environment:
          MYSQL_USER: lagoonkform
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_PASSWORD: lVDrP22Mb906GYZgsKlU
          MYSQL_ROOT_PASSWORD: lVDrP22Mb906GYZgsKlU
          MYSQL_RANDOM_ROOT_PASSWORD: lVDrP22Mb906GYZgsKlU
    working_directory: ~/lagoonsymfony # directory where steps will run
    steps: # a set of executable commands
      - checkout # special step to check out source code to working directory
      - run: sudo apt update
      - run: sudo apt install -y libsqlite3-dev zlib1g-dev mariadb-client zlib1g-dev
      - run: sudo docker-php-ext-install zip pdo_mysql
      - run: sudo docker-php-ext-enable zip pdo_mysql
      - run: sudo composer self-update
      - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - composer-v1-
      - run: composer update
      - run: composer install -n --prefer-dist --no-scripts
      - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - restore_cache: # special step to restore the dependency cache if `package.json` does not change
          keys:
            - node-v1-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - node-v1-
      - run: cp .env .env.local
      - run: yarn install
      - save_cache: # special step to save the dependency cache with the `package.json` cache key template
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: yarn run encore production
      - run: php bin/console security:check

workflows:
  version: 2
  notify_deploy:
    jobs:
      - build
