version: 2

jobs:
  build:
    docker:
      - image: cimg/php:8.1.5-node
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
      - image: mysql:5.7
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --innodb-large-prefix=true --innodb-file-format=Barracuda
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          DATABASE_URL: $DATABASE_URL
          APP_SECRET: $APP_SECRET
          MYSQL_DB: $MYSQL_DB
          MYSQL_HOST: $MYSQL_HOST
          MYSQL_PASSWORD: $MYSQL_PASSWORD
          MYSQL_USER: $MYSQL_USER
    working_directory: ~/symfony # directory where steps will run
    steps: # a set of executable commands
      - checkout # special step to check out source code to working directory
      - run: sudo apt update
      - run: sudo apt install -y libsqlite3-dev zlib1g-dev mariadb-client zlib1g-dev
      - run: sudo composer self-update
      - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - composer-v1-
      - run: composer update
      - run: composer install -n --prefer-dist --no-scripts
      - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - restore_cache: # special step to restore the dependency cache if `package.json` does not change
          keys:
            - node-v1-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - node-v1-
      - run:
          name: Adding env
          command: cp .env .env.local
          environment:
            - DATABASE_URL: $DATABASE_URL
            - APP_SECRET: $APP_SECRET
      - run: yarn install
      - save_cache: # special step to save the dependency cache with the `package.json` cache key template
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: yarn run encore production

  deploy:
    docker:
      - image: cimg/php:8.1.5-node
    working_directory: ~/symfony
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "2d:7c:6b:8b:ac:95:4b:52:66:87:31:1c:f8:4c:42:cb" # SSH Key Fingerprint found in CircleCI
      - run:
          name: Install Deployer
          command: |
            curl -LO https://deployer.org/deployer.phar
            sudo mv deployer.phar /usr/local/bin/dep
            sudo chmod +x /usr/local/bin/dep
      - run:
          name: Deploy
          command: | # Add our test server as "known host"
            echo '|1|8CUVSRPwqkNfkAIEc1TvyzEqTZc=|t1VPunVgoePXB5IQq9wL82HCgX8= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFsQKOu5B2nC2z50wCM/7wpKTGrT+yAPTpKqyiUDMvpm
            |1|h1WWykIdo+4Wozzlx8HruJDDjHQ=|GmLokwc+MqXICKiqLTo44nbNZGA= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDgthWLAxOwq97+Wtohjnlrsv8GjpqBv1doY+fUKBZmafI4g4cPULeB2x0YnnzZUoEUrd8/boJotPk55M7YQLRok/gtNo/sUHvuq3R0ZyaaVMCwSdW+DCtHjmxYSA5hKLZuuowvk+QeXqrYDU+igrgC3acB6o5g4HOFqP4GYrnmG4eP4K51taT2Czp5r4jUMuFSigOHGoLx4VCmchDc1K7xfHEDrq/+WYHi5U2YbNg8ddeLZv5BMLsr+qQgumBSxXRwuYm7eMDMwxmLJFz8yrSq9SBBK5g3x5WpXcYTE+EwEj552KrX6/tmB4ph1IjncUPgsrxKyo1519L2aaxutHvn2WjoKlqwKuKkoFz4i4mjHEzWg82/QurtwPtIfNWlTslotaOqqGbo36uzT1EjpIZz3pkCQppuj345kvWEjkADL9+AijYFEFj29pM4ejYHPNL6fYkmGL0e5AEZaydTseidf4fzpGjIOFTbpMQlfLH/Zi7+g6NMPuzZoFhFU3kB6OCMKRYE80vxRyZy7EtQYgbK6K0b4QtxksTATnO6ICZ6FWyCm/dK0zIO6qt5WTYDX9n/tOir6m+wd8541ouzBlO14B0kNIuTLhzaQ661qziUCyCl0M+pK2HAxUX8Fh4mxWpjXnU2oQX5iHhy4LLxdoTDLfqXa+RJQ2b5SHG+bSEF1Q==' >> ~/.ssh/known_hosts
            dep deploy

workflows:
  version: 2
  notify_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main # Only deploy builds on th develop branch