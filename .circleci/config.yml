version: 2

jobs:
  build:
    docker:
      - image: cimg/php:8.1.5-node
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
      - image: mysql:5.7
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --innodb-large-prefix=true --innodb-file-format=Barracuda
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: ~/symfony # directory where steps will run
    steps: # a set of executable commands
      - checkout # special step to check out source code to working directory
      - run: sudo apt update
      - run: sudo apt install -y libsqlite3-dev zlib1g-dev mariadb-client zlib1g-dev
      - run:
          name: Install Composer
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
            php -r "if (hash_file('SHA384', 'composer-setup.php') === '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" && \
            php composer-setup.php && \
            php -r "unlink('composer-setup.php');" && \
            chmod +x ./composer.phar && \
            mv ./composer.phar /usr/local/bin/composer
      - run: sudo composer self-update
      - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - composer-v1-
      - run: composer update
      - run: composer install -n --prefer-dist --no-scripts
      - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - restore_cache: # special step to restore the dependency cache if `package.json` does not change
          keys:
            - node-v1-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - node-v1-
      - run: cp .env .env.local
      - run: yarn install
      - save_cache: # special step to save the dependency cache with the `package.json` cache key template
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: yarn run encore production
  deploy:
    docker:
      - image: cimg/php:8.1.5-node
    working_directory: ~/symfony
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "db:1a:4b:50:71:c9:71:2d:1b:bb:04:4d:93:59:f5:16"
            - "e1:47:71:bb:61:8f:d1:81:64:82:b3:d0:c6:df:db:ea"
      - run:
          name: Install Deployer
          command: |
            curl -LO https://deployer.org/deployer.phar
            sudo mv deployer.phar /usr/local/bin/dep
            sudo chmod +x /usr/local/bin/dep
      - run:
          name: Deploy
          command: | # Add our test server as "known host"
            echo '|1|WWcPo60CHAYcWlU6B6hBs/mPwYs=|psjhkHXqIGqTQWZ6flP00KAgPbo= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDgthWLAxOwq97+Wtohjnlrsv8GjpqBv1doY+fUKBZmafI4g4cPULeB2x0YnnzZUoEUrd8/boJotPk55M7YQLRok/gtNo/sUHvuq3R0ZyaaVMCwSdW+DCtHjmxYSA5hKLZuuowvk+QeXqrYDU+igrgC3acB6o5g4HOFqP4GYrnmG4eP4K51taT2Czp5r4jUMuFSigOHGoLx4VCmchDc1K7xfHEDrq/+WYHi5U2YbNg8ddeLZv5BMLsr+qQgumBSxXRwuYm7eMDMwxmLJFz8yrSq9SBBK5g3x5WpXcYTE+EwEj552KrX6/tmB4ph1IjncUPgsrxKyo1519L2aaxutHvn2WjoKlqwKuKkoFz4i4mjHEzWg82/QurtwPtIfNWlTslotaOqqGbo36uzT1EjpIZz3pkCQppuj345kvWEjkADL9+AijYFEFj29pM4ejYHPNL6fYkmGL0e5AEZaydTseidf4fzpGjIOFTbpMQlfLH/Zi7+g6NMPuzZoFhFU3kB6OCMKRYE80vxRyZy7EtQYgbK6K0b4QtxksTATnO6ICZ6FWyCm/dK0zIO6qt5WTYDX9n/tOir6m+wd8541ouzBlO14B0kNIuTLhzaQ661qziUCyCl0M+pK2HAxUX8Fh4mxWpjXnU2oQX5iHhy4LLxdoTDLfqXa+RJQ2b5SHG+bSEF1Q==' >> ~/.ssh/known_hosts
            echo '|1|f5xSyPUqBc5PKXlrTnJhD4QGFU4=|iItWbv0MtHktIac0z+2uzwdlASU= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFsQKOu5B2nC2z50wCM/7wpKTGrT+yAPTpKqyiUDMvpm' >> ~/.ssh/known_hosts
            dep deploy
workflows:
  version: 2
  notify_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main # Only deploy builds on the main branch